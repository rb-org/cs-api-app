---
version: 0.2
env:
  variables:
    image_repo_url: ""
    image_version: ""
    cs_api_port: ""
    cluster_region: ""
    cluster_name: ""
    db_port: ""
    db_type: ""
  parameter-store:
    db_user: ""
    db_password: ""
    db_address: ""
    db_database: ""
    
    kubeconfig: ""
phases:
  install:
    commands:
      - |
        # Install AWS CLI
        pip install --upgrade pip
        pip install awscli
      - |
        # Install kubectl
        curl -o kubectl https://amazon-eks.s3-us-west-2.amazonaws.com/1.11.5/2018-12-06/bin/linux/amd64/kubectl
        chmod +x ./kubectl
        cp ./kubectl /bin/kubectl
        export PATH=/bin:$PATH
      - |
        # Install AWS IAM Authenticator
        curl -o aws-iam-authenticator https://amazon-eks.s3-us-west-2.amazonaws.com/1.11.5/2018-12-06/bin/linux/amd64/aws-iam-authenticator
        chmod +x ./aws-iam-authenticator
        cp ./aws-iam-authenticator /bin/aws-iam-authenticator 
  pre_build:
    commands:
      - echo $kubeconfig        
      - aws eks --region $cluster_region update-kubeconfig --name $cluster_name
      - kubectl describe pods
  build:
    commands:
      - |
        # Build image
        # version=$(date "+%Y%m%d%H%M%S")
        # docker-compose build
        # $(aws ecr get-login --no-include-email --region eu-west-1)
        # docker tag csapi:latest 771529465472.dkr.ecr.eu-west-1.amazonaws.com/csapi:latest
        # docker tag csapi:latest 771529465472.dkr.ecr.eu-west-1.amazonaws.com/csapi:$version
      - |
        # Upload image
        # docker push 771529465472.dkr.ecr.eu-west-1.amazonaws.com/csapi:latest
        # docker push 771529465472.dkr.ecr.eu-west-1.amazonaws.com/csapi:$version
      - |
        # Deploy image env vars
        export app_name="csapi"
        export namespace="default"
        export replicas="1"
        export image="771529465472.dkr.ecr.eu-west-1.amazonaws.com/csapi"
        export version="latest"
        export app_port="5000"
        export protocol="TCP"
        export db_address="d020-rds-mysql.che5sckijrcn.eu-west-1.rds.amazonaws.com"
        export db_type="mysql"
        export db_password="DifficultPassw0rd!"
        export db_database="people"
        export db_user="csapi"
        export db_port="3306"
        export external_port="5000"
      - |
        # Create deployment yaml
        rm -f ./kubernetes/deployment.yml ./kubernetes/deployment_temp.yml  
        ( echo "cat <./kubernetes/deployment.yml";
          cat ./kubernetes/deployment.tpl;
          echo "EOF";
        ) >./kubernetes/deployment_temp.yml
        . ./kubernetes/deployment_temp.yml
        cat ./kubernetes/deployment.yml
      - |
        # Create service yaml
        rm -f ./kubernetes/service.yml ./kubernetes/service_temp.yml  
        ( echo "cat <./kubernetes/service.yml";
          cat ./kubernetes/service.tpl;
          echo "EOF";
        ) >./kubernetes/service_temp.yml
        . ./kubernetes/service_temp.yml
        cat ./kubernetes/service.yml
  post_build:
    commands:
      - echo "Build completed on `date`"
      #- aws sns publish --topic-arn $SNS_TOPIC_ARN --message "build completed on `date` CODEBUILD_SOURCE_REPO_URL= ${CODEBUILD_SOURCE_REPO_URL} and CODEBUILD_SOURCE_VERSION= ${CODEBUILD_SOURCE_VERSION}"
artifacts:
  files:
    - source/*
    - Scripts/*
    # - cloudformation/cfn-service.yml
    #- appspec.yml
    # - test-output_sam.yaml
  #discard-paths: yes      
